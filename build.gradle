plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '4.0.4'
    id 'idea'
    id 'net.kyori.blossom' version '1.1.0'
}

mainClassName = 'site.purrbot.bot.PurrBot'
version = '2.3.3'

description = """"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
    maven { url = 'https://jitpack.io' }
}

dependencies {
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compile group: 'com.jagrosh', name: 'jda-utilities-menu', version:'3.0.2'
    compile group: 'com.jagrosh', name: 'jda-utilities-commons', version:'3.0.2'
    compile group: 'com.rethinkdb', name: 'rethinkdb-driver', version:'2.3.3'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    compile group: 'com.google.guava', name: 'guava', version:'28.1-jre'
    compile(group: 'net.dv8tion', name: 'JDA', version:'4.1.0_84'){
        exclude(module: 'opus-java')
    }
    compile group: 'club.minnced', name: 'discord-webhooks', version: '0.1.8'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
    compile group: 'com.mashape.unirest', name: 'unirest-java', version: '1.4.9'
    compile group: 'org.discordbots', name: 'DBL-Java-Library', version: '2.0.1'
    compile group: 'com.sparkjava', name: 'spark-core', version: '2.9.1'
    compile group: 'com.github.rainestormee', name: 'jda-command', version: '1.1.3'
    compile group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '2.8.0'
    compile group: 'com.andre601', name: 'javabotblockapi', version: '3.0.6'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.18.10'
}


task wrapper(type: Wrapper) {
    gradleVersion = '4.9'
}


compileJava {
    classpath = sourceSets.main.compileClasspath
    options.encoding = 'UTF-8'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

build.dependsOn shadowJar

artifacts {
    archives shadowJar
}

task cleanDistTar(type: Delete) { delete files(distTar) }
distTar { classifier = "trash" }
distTar.finalizedBy cleanDistTar

task cleanDistZip(type: Delete) { delete files(distZip) }
distZip { classifier = "trash" }
distZip.finalizedBy cleanDistZip

task cleanShittyJar(type: Delete) { delete files(jar) }
jar { classifier = "trash" }
jar.finalizedBy cleanShittyJar

jar {
    classifier = "nodeps"
}

blossom {
    replaceToken 'BOT_VERSION', version
}

shadowJar {
    classifier = ""
    baseName = 'Purr'
    archiveName = "Purr.jar"
}

